TODO: Git and Github
git init                          => to initialize all the file and folder
git add <file_path>               => this will throw the selected file to the stagging area
git add .                         => to tracks the changes in all the files and folder
git rm <file_path>                => to remove a file from tracking
git blame <file_path>             => it will show each code line was added by which person
git status                        => show the modified file which are yet to commit
git commit -m "commit message"    => ommit the stagging file
git log --oneline                 => to show all the commit history
git show <commit_id>              => it will show all the changes on that commit

// Reverting the code
git reset --hard <commit_id>      => this will fully revert the code to the previous commit
git revert <commit_id>            => it will revert back the code

// pushing the code
git remote add origin <URL>       => it will push the entire code to this URL
git remote -v                     => verify the origin
git branch -M main
git push -u origin main

// when you do "git reset --hard <comit_id>" then to push that code, you have to do
git push -f                       => because in local HEAD was reverted, and on server it was at original

// Branching
git branch                        => it will show all the branch
git branch "branch name"          => making a new branch
git push                          => run the command shows in the error, to push the commits to the branches
git checkout "branch name"        => switching between branches

// FIXME: Branching naming
git branch "feat/add-chat-support"
git branch "bug/login-not-working"
wip                               => works in progress; stuff I know won't be finished soon
junk                              => Throaway branch created to experiment

// Merging (you always have to on the main branch)
git merge origin/branch_name      => to merge the code of the branch to the main branch

// Pulling
git pull                          => pull the latest code from the server to the local machine

// Rebase
When you want to maintain the history of the branch in hte main code
git rebase feat/feat-c            => it will add all the commits of branch feat-c in the main branch

// Stash
Temporarily stores changes, for git pull
git stash                         => to temporarily stash the code
git stash apply                   => apply the stashed code